%%% 
%%% STACK
%%% ARITH
%%% ARRAYS
%%% PROCEDURES 
%%% EXECUTABLE ARRAYS
%%% A LITTLE TRICK
%%% DRAWING 

%%% STACK

1 2 true (hello) [ 5 6 7 ]

exch % Swaps top elements

5 -2 roll % Roll top 5 elements of the stack two steps backwards

3 -1 roll 

dup 

pop 

2 copy 

pop pop 

2 index 

2 index 

clear 

%%% ARITH

3 5 7 

add

sub 

neg 

add 

dup

mul 

7 div

%%% ARRAYS

[ 1 3 5 ]

aload 

pop 

2 array 

astore 

[

3 1 roll

]

0 get

%%% PROCEDURES 

/inc { 1 add } def 

5 inc 

5 inc inc inc

{ 1 add }

/add1 

exch 

def 

(hello) inc 

clear inc 

/inc load 

5 exch

exec 

%%% EXECUTABLE ARRAYS

5 

/add load

4 3 1 roll

exec 

5 /add load 

[ 3 1 roll ]

cvx 

6 exch exec 

%%% A LITTLE TRICK

/make-adder 
{ [ exch /add cvx ] cvx }
def 

/partial 
{ [ 3 1 roll /exec cvx ] cvx }
def 

%%% DRAWING

200 200 translate 

/r-pen { 1 0 0 setrgbcolor 3 setlinewidth } def 
/g-pen { 0 1 0 setrgbcolor 6 setlinewidth } def 
/b-pen { 0 0 1 setrgbcolor 9 setlinewidth } def 

/draw-arc { 0 0 100 0 30 arc stroke } def

/dq
{ 
    r-pen draw-arc 
    30 rotate 
    g-pen draw-arc 
    30 rotate 
    b-pen draw-arc 
    30 rotate  
} def 

/draw-circle { dq dq dq dq } def

draw-circle 

0.5 0.5 scale 

draw-circle 

3 3 scale 

draw-circle 
